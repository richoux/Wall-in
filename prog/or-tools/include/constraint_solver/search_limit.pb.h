// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: constraint_solver/search_limit.proto

#ifndef PROTOBUF_constraint_5fsolver_2fsearch_5flimit_2eproto__INCLUDED
#define PROTOBUF_constraint_5fsolver_2fsearch_5flimit_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace operations_research {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_constraint_5fsolver_2fsearch_5flimit_2eproto();
void protobuf_AssignDesc_constraint_5fsolver_2fsearch_5flimit_2eproto();
void protobuf_ShutdownFile_constraint_5fsolver_2fsearch_5flimit_2eproto();

class SearchLimitProto;

// ===================================================================

class SearchLimitProto : public ::google::protobuf::Message {
 public:
  SearchLimitProto();
  virtual ~SearchLimitProto();

  SearchLimitProto(const SearchLimitProto& from);

  inline SearchLimitProto& operator=(const SearchLimitProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchLimitProto& default_instance();

  void Swap(SearchLimitProto* other);

  // implements Message ----------------------------------------------

  SearchLimitProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SearchLimitProto& from);
  void MergeFrom(const SearchLimitProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 time = 1 [default = 9223372036854775807];
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // optional int64 branches = 2 [default = 9223372036854775807];
  inline bool has_branches() const;
  inline void clear_branches();
  static const int kBranchesFieldNumber = 2;
  inline ::google::protobuf::int64 branches() const;
  inline void set_branches(::google::protobuf::int64 value);

  // optional int64 failures = 3 [default = 9223372036854775807];
  inline bool has_failures() const;
  inline void clear_failures();
  static const int kFailuresFieldNumber = 3;
  inline ::google::protobuf::int64 failures() const;
  inline void set_failures(::google::protobuf::int64 value);

  // optional int64 solutions = 4 [default = 9223372036854775807];
  inline bool has_solutions() const;
  inline void clear_solutions();
  static const int kSolutionsFieldNumber = 4;
  inline ::google::protobuf::int64 solutions() const;
  inline void set_solutions(::google::protobuf::int64 value);

  // optional bool smart_time_check = 5 [default = false];
  inline bool has_smart_time_check() const;
  inline void clear_smart_time_check();
  static const int kSmartTimeCheckFieldNumber = 5;
  inline bool smart_time_check() const;
  inline void set_smart_time_check(bool value);

  // optional bool cumulative = 6 [default = false];
  inline bool has_cumulative() const;
  inline void clear_cumulative();
  static const int kCumulativeFieldNumber = 6;
  inline bool cumulative() const;
  inline void set_cumulative(bool value);

  // @@protoc_insertion_point(class_scope:operations_research.SearchLimitProto)
 private:
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_branches();
  inline void clear_has_branches();
  inline void set_has_failures();
  inline void clear_has_failures();
  inline void set_has_solutions();
  inline void clear_has_solutions();
  inline void set_has_smart_time_check();
  inline void clear_has_smart_time_check();
  inline void set_has_cumulative();
  inline void clear_has_cumulative();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 time_;
  ::google::protobuf::int64 branches_;
  ::google::protobuf::int64 failures_;
  ::google::protobuf::int64 solutions_;
  bool smart_time_check_;
  bool cumulative_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_constraint_5fsolver_2fsearch_5flimit_2eproto();
  friend void protobuf_AssignDesc_constraint_5fsolver_2fsearch_5flimit_2eproto();
  friend void protobuf_ShutdownFile_constraint_5fsolver_2fsearch_5flimit_2eproto();

  void InitAsDefaultInstance();
  static SearchLimitProto* default_instance_;
};
// ===================================================================


// ===================================================================

// SearchLimitProto

// optional int64 time = 1 [default = 9223372036854775807];
inline bool SearchLimitProto::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SearchLimitProto::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SearchLimitProto::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SearchLimitProto::clear_time() {
  time_ = GOOGLE_LONGLONG(9223372036854775807);
  clear_has_time();
}
inline ::google::protobuf::int64 SearchLimitProto::time() const {
  return time_;
}
inline void SearchLimitProto::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
}

// optional int64 branches = 2 [default = 9223372036854775807];
inline bool SearchLimitProto::has_branches() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SearchLimitProto::set_has_branches() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SearchLimitProto::clear_has_branches() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SearchLimitProto::clear_branches() {
  branches_ = GOOGLE_LONGLONG(9223372036854775807);
  clear_has_branches();
}
inline ::google::protobuf::int64 SearchLimitProto::branches() const {
  return branches_;
}
inline void SearchLimitProto::set_branches(::google::protobuf::int64 value) {
  set_has_branches();
  branches_ = value;
}

// optional int64 failures = 3 [default = 9223372036854775807];
inline bool SearchLimitProto::has_failures() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SearchLimitProto::set_has_failures() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SearchLimitProto::clear_has_failures() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SearchLimitProto::clear_failures() {
  failures_ = GOOGLE_LONGLONG(9223372036854775807);
  clear_has_failures();
}
inline ::google::protobuf::int64 SearchLimitProto::failures() const {
  return failures_;
}
inline void SearchLimitProto::set_failures(::google::protobuf::int64 value) {
  set_has_failures();
  failures_ = value;
}

// optional int64 solutions = 4 [default = 9223372036854775807];
inline bool SearchLimitProto::has_solutions() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SearchLimitProto::set_has_solutions() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SearchLimitProto::clear_has_solutions() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SearchLimitProto::clear_solutions() {
  solutions_ = GOOGLE_LONGLONG(9223372036854775807);
  clear_has_solutions();
}
inline ::google::protobuf::int64 SearchLimitProto::solutions() const {
  return solutions_;
}
inline void SearchLimitProto::set_solutions(::google::protobuf::int64 value) {
  set_has_solutions();
  solutions_ = value;
}

// optional bool smart_time_check = 5 [default = false];
inline bool SearchLimitProto::has_smart_time_check() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SearchLimitProto::set_has_smart_time_check() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SearchLimitProto::clear_has_smart_time_check() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SearchLimitProto::clear_smart_time_check() {
  smart_time_check_ = false;
  clear_has_smart_time_check();
}
inline bool SearchLimitProto::smart_time_check() const {
  return smart_time_check_;
}
inline void SearchLimitProto::set_smart_time_check(bool value) {
  set_has_smart_time_check();
  smart_time_check_ = value;
}

// optional bool cumulative = 6 [default = false];
inline bool SearchLimitProto::has_cumulative() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SearchLimitProto::set_has_cumulative() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SearchLimitProto::clear_has_cumulative() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SearchLimitProto::clear_cumulative() {
  cumulative_ = false;
  clear_has_cumulative();
}
inline bool SearchLimitProto::cumulative() const {
  return cumulative_;
}
inline void SearchLimitProto::set_cumulative(bool value) {
  set_has_cumulative();
  cumulative_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace operations_research

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_constraint_5fsolver_2fsearch_5flimit_2eproto__INCLUDED
