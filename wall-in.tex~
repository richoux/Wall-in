%% from  July, 10th  2008, see neat versions  (kam-dimatia, stacs,
%% csr, mfcs)

\documentclass[11pt]{article}

\usepackage[english]{babel}
\usepackage[latin1]{inputenc}
\usepackage[T1]{fontenc}

\usepackage{amsmath,amsfonts,amssymb,latexsym}
\usepackage{color}

\setlength{\topmargin}{-.53in}
\setlength{\textwidth}{6.5in}
\setlength{\oddsidemargin}{0.0in}
\setlength{\evensidemargin}{0.0in}
\setlength{\textheight}{24cm}
%\setlength{\parskip}{\medskipamount}
\setlength{\marginparwidth}{1.2in}
%\renewcommand{\baselinestretch}{1.3}

\newcommand{\problemcsp}[3]% 
	   {\begin{trivlist}
	     \item[]%
	       \textbf{Problem:} \textsc{#1}\\
	       \emph{Input:} #2\\
	       \emph{Question:} #3
	     \end{trivlist}%
	   } 

\newcommand{\pproblemcsp}[4]% 
	   {\begin{trivlist}
	     \item[]%
	       \textbf{Problem:} \textsc{#1}\\
	       \emph{Input:} #2\\
	       \emph{Parameter:} #3\\
	       \emph{Question:} #4
	     \end{trivlist}%
	   }
	   
\newcommand{\np}{\mathrm{NP}} 
\newcommand{\p}{\mathrm{P}}
\newcommand{\fpt}{\mathrm{FPT}}

\newcommand{\ra}{\rightarrow} 
\newcommand{\ran}{\operatorname{ran}}
\newcommand{\swap}{\operatorname{swap}}
\newcommand{\width}{\operatorname{width}}
\newcommand{\csp}{\textsc{csp}}
\newcommand{\dcsp}{\textsc{dcsp}}
\newcommand{\pol}{\operatorname{Pol}}
\newcommand{\emorph}{\operatorname{End}}
\newcommand{\invar}{\operatorname{Inv}}
\newcommand{\arity}{\operatorname{ar}}
\newcommand{\de}{\operatorname{Depth}}
\newcommand{\rel}{\operatorname{Rel}}

\newcommand{\card}[1]{\left|#1\right|} 
\newcommand{\cln}[1]{[#1]}
\newcommand{\ccln}[1]{\langle#1\rangle}
\newcommand{\graph}[1]{#1^{\bullet}}

\newtheorem{counter}{Counter}[section]
\newtheorem{lemma}[counter]{Lemma}
\newtheorem{theorem}[counter]{Theorem}
\newtheorem{proposition}[counter]{Proposition}
\newtheorem{corollary}[counter]{Corollary}
\newtheorem{claim}[counter]{Claim} 
\newtheorem{fact}[counter]{Fact}
\newtheorem{remark}[counter]{Remark}
\newtheorem{definition}[counter]{Definition}
\newtheorem{conjecture}[counter]{Conjecture}
\newtheorem{example}[counter]{Example}
\newtheorem{notation}[counter]{Notation}
\newtheorem{bild}[counter]{Figure}

\newenvironment{proof}%
{\begin{trivlist}\item[]\emph{Proof:}}%
  {\end{trivlist}}


%% WARNING: never put a qed / qex directly after a displaymath.
%% If it is, fulfill some text after the displaymath AND erase 
%% file.aux, then recompile.

\newcommand\squareforqed{\hbox{$\Box$}}
\newcommand\qed{\ifmmode\squareforqed\else{\unskip\nobreak\hfil
    \penalty50\hskip1em\null\nobreak\hfil\squareforqed
    \parfillskip=0pt\finalhyphendemerits=0\endgraf}\fi}

\newcommand\squareforqex{\hbox{$\blacksquare$}}
\newcommand\qex{\ifmmode\squareforqex\else{\unskip\nobreak\hfil
    \penalty50\hskip1em\null\nobreak\hfil\squareforqex
    \parfillskip=0pt\finalhyphendemerits=0\endgraf}\fi}


\begin{document}
  
\setcounter{page}{1}
\pagestyle{headings}

\title{Co-Boolean $\csp$}
\author{}
%% \institute{}

\maketitle


%% \begin{abstract}

%% \end{abstract}

\tableofcontents

\newpage

\section{Definitions}

\subsection{Kernel}

Universal algebra  often uses the concept of  \emph{kernel}. We define
this notion with the help of equivalence classes.  Let $f \colon D \to
D$ be a  unary function with range $\ran  f$.  A \emph{$d$-equivalence
  class}, for  $d \in \ran  f$ and denoted  by $[d]_f$, is the  set of
elements $[d]_f = \{x \in D \mid  f(x) = d\}$.  The kernel $\ker f$ of
a function $f$ is the  set of all equivalence classes with cardinality
strictly greater than 1 for all $d \in \ran f$, \emph{i.e.}  $\ker f =
\{[d]_f \mid d \in \ran f ~\text{and}~ \card{[d]_f} \geq 2\}$.

\begin{example}\label{ex:kernel_universal-algebra}
  Let  $f$,  $g$  and $h$  be  unary  functions  on  the domain  $D  =
  \{0,1,2,3\}$ such that
  \begin{displaymath}
    \begin{array}{c||c|c|c}
      x & f(x) & g(x) & h(x)\\
      \hline 
      0 & 0 & 0 & 1\\
      1 & 1 & 1 & 1\\
      2 & 2 & 0 & 1\\
      3 & 3 & 1 & 1
    \end{array}
  \end{displaymath}
  Then $\ker f = \emptyset$, $\ker g = \{\{0,2\};\{1,3\}\}$ and $\ker h
  = \{\{0,1,2,3\}\}$.
  \qex
\end{example}

From now  on, in order to lighten  notations we will write  \[\ker f =
\{(a,b); (c,d,e)\}\] instead of $\ker f = \{\{a, b\}; \{c, d, e\}\}$.

\subsection{H-normal form}

When studying  the complexity of $\csp(\graph  F)$ for a  set of unary
functions $F$  it is  convenient to represent  $\graph F$ in  a normal
form. We define below the H-normal form.

\begin{definition}
  The \emph{H-normal} form  of the graphs of a  set of unary functions
  $F = \{f_1,\dots, f_k\}$ is  the ($k+1$)-ary relation $F^H$ which is
  the  solution of formula  $\phi(x, y_1,  \ldots, y_k)$  expressed as
  follow:
  \begin{displaymath}
    \phi(x,  y_1, \ldots, y_k)  := \bigwedge_{i  \in \{1,  \dots, k\}}
    f_i(x) = y_i
  \end{displaymath}
\end{definition}

It is very convenient to present the relation $F^H$ as a matrix, where
rows are tuples in $F^H$. Under this form, we intuitively see that the
first column describes every element  of the domain $D$ and each other
column corresponds to  the description of a function  in $F$. Speaking
about $F^H$ we call the first column the \emph{left hand side} and the
group of all  other columns the \emph{right hand  side}. This group of
columns is denoted $F^H_{rhs}$.

\begin{example}\label{ex:H-normal}
  Let $F = \{f_1, f_2\}$, with  $f_1$ and $f_2$ two unary functions on
  $D$ defined as follow:
  \begin{displaymath}
    \begin{array}{c||c|c}
      x & f_1(x) & f_2(x)\\
      \hline 
      0 & 0 & 0\\
      1 & 1 & 0\\
      2 & 0 & 1\\
      3 & 1 & 1
    \end{array}
  \end{displaymath}
  Thus, we have
  \begin{displaymath}
    F^H = \{(0, 0, 0); (1, 1, 0); (2, 0, 1); (3, 1, 1)\} = \left(
      \begin{array}{ccc}
        0 & 0 & 0\\
        1 & 1 & 0\\
        2 & 0 & 1\\
        3 & 1 & 1        
      \end{array}
    \right)
  \end{displaymath}
  and the right hand side of $F^H$, denoted $F^H_{rhs}$
  \begin{displaymath}
    F^H_{rhs} = \left(
      \begin{array}{cc}
        0 & 0\\
        1 & 0\\
        0 & 1\\
        1 & 1        
      \end{array}
    \right)
  \end{displaymath}
  % 
  \qex
\end{example}


\subsection{A-shape}

Consider three unary  functions $f_1, f_2, f_3$ over  a domain $D$. An
A-shape is the sub-matrix of $F^H_{rhs}$
\begin{displaymath}
  \begin{array}{ccc}
    f_1 & f_2 & f_3\\
    \hline
    b_1 & a_2 & a_3\\
    a_1 & b_2 & a_3\\
    a_1 & a_2 & b_3
  \end{array}
\end{displaymath}
with the  fact that  there are  no rows $r$  in $F^H_{rhs}$  such that
$r[f_1]r[f_2]r[f_3] = a_1 a_2 a_3$ or $b_1 b_2 b_3$.


\section{Co-Boolean $\csp$}

We consider the  problem $\csp(F^H)$ where $F$ is  a set of co-Boolean
functions  only (no  constant functions)  and $F^H$  does  not contain
duplicated rows,  that is,  there is  no couples $(a,  b)$ of  rows in
$F^H_{rhs}$ such  that $a$ and  $b$ are equals. Moreover,  we consider
that $F$ contains at least three non-constant functions, otherwise the
complexity  of $\csp(F^H)$  is  clearly in  $\p$.   Indeed, we  cannot
increase the number of  kernels by composition of co-Boolean functions
(\ref{prop:cteker}) and with less than three non-constant functions we
cannot have a A-shape, then by \ref{lem:ashape} we conclude that $\pol
F^H$ contains a majority or minority operation.

\begin{proposition}\label{prop:cteker}
  Let $F$  be a set of co-Boolean  functions. For all $f,g  \in F$, we
  have either  $f \circ g$  a constant function  or $\ker f \circ  g =
  \ker g$.
\end{proposition}

\begin{proof}
  Let $f,g$ be two co-Boolean functions in $F$.  Assume that $\ran f =
  \{a,b\}$ and $\ran  g = \{c,d\}$, for some $a,b,c,d  \in D$. We know
  that $\ran g  \subseteq \ker f$ holds iff $f \circ  g$ is a constant
  function.

  Assume  that there  exists $f,g  \in F$  such that  we have  $\ran g
  \nsubseteq  \ker f$.  We also  know that  for every  unary functions
  $f_1$  and   $f_2$,  $\ker  f_2   \subseteq  \ker  f_1   \circ  f_2$
  holds. Suppose that we have $\ker f \circ g \neq \ker g$, that is to
  say $\ker f \circ g \nsubseteq \ker  g$. If it is, then we must have
  $i,j \in D$ such  that $f \circ g(i) = f \circ  g(j)$ and $g(i) \neq
  g(j)$.   We know that  $\ran g  = \{c,d\}$.  Assume without  loss of
  generality that we have $g(i) = c$ and $g(j) = d$. Then we must have
  $f(c) = f(d)$,  however this is a contradiction  since $f(c) = f(d)$
  implies  $(c,d)  \in \ker  f$,  and we  have  assumed  that $\ran  g
  \nsubseteq \ker f$.
  % 
  \qed
\end{proof}

\begin{lemma}\label{lem:ashape}
  Let $F$  be a  set of co-Boolean  functions.  $\pol F^H$  contains a
  majority operation or a minority  operation if and only if there are
  no A-shapes in $F^H_{rhs}$.
\end{lemma}
\begin{proof}
  The "only if" direction is  obvious; consider the other one. We will
  prove that  if $\pol  F^H$ does not  contain a majority  or minority
  operation then we must have an A-shape in $F^H_{rhs}$. Take:
  \begin{displaymath}
    \begin{array}{ccc}
      f_1 & f_2 & f_3\\
      \hline
      a_1 & a_2 & a_3\\
      b_1 & b_2 & b_3\\
      c_1 & c_2 & c_3
    \end{array}
  \end{displaymath}
  with $|\{a_i,  b_i, c_i\}| = 2$ for  $1 \leq i \leq  3$. Assume that
  this sub-matrix is not closed  under a majority operation (the proof
  is similar  if we consider  a minority operation).  Without  loss of
  generality  we can  assume  $a_1 =  b_1$,  then we  can rewrite  our
  sub-matrix like this:
  \begin{displaymath}
    \begin{array}{ccc}
      f_1 & f_2 & f_3\\
      \hline
      a_1 & a_2 & a_3\\
      a_1 & b_2 & b_3\\
      c_1 & c_2 & c_3
    \end{array}
  \end{displaymath}
  Remark that we must not have $a_2 = b_2$ or $a_3 = b_3$ otherwise it
  is clear that  the sub-matrix is closed under  a majority operation.
  Then, we must have $(a_2 = c_2$ and $b_3 = c_3)$ or $(b_2 = c_2$ and
  $a_3 = c_3)$. Thus, we obtain:
  \begin{displaymath}
    \begin{array}{ccc}
      f_1 & f_2 & f_3\\
      \hline
      a_1 & a_2 & a_3\\
      a_1 & b_2 & b_3\\
      c_1 & a_2 & b_3
    \end{array}
  \end{displaymath}
  or
  \begin{displaymath}
    \begin{array}{ccc}
      f_1 & f_2 & f_3\\
      \hline
      a_1 & a_2 & a_3\\
      a_1 & b_2 & b_3\\
      c_1 & b_2 & a_3
    \end{array}
  \end{displaymath}
  that  is,  the  expected  shape.   Moreover, since  $F^H$  and  then
  $F^H_{rhs}$ are  not closed under a  majority, we cannot  have a row
  $r$ in $F^H_{rhs}$  such that we have $r[f_1]r[f_2]r[f_3]  = a_1 a_2
  b_3$  or  $r[f_1]r[f_2]r[f_3]  =  a_1  b_2 a_3$  (depending  of  the
  sub-matrix  we  have).  Proof  for  the  minority operation  follows
  exactly the same pattern.
  %
  \qed
\end{proof}

From   Proposition~\ref{prop:cteker}  and   Lemma~\ref{lem:ashape}  we
deduce the following proposition.

\begin{proposition}
  Let  $F$ be a  set of  co-Boolean functions  containing at  most two
  non-constant  functions. Then $\pol  F^H$ contains  a majority  or a
  minority operation and the problem $\csp(F^H)$ is in $\p$.
\end{proposition}
\begin{proof}
  By  Proposition~\ref{prop:cteker},  we know  that  we cannot  create
  another non-constant  operation in $\cln F$ with  a different kernel
  from functions contains  in $F$. Thus, we cannot  have an A-shape in
  $F^H_{rhs}$, and by Lemma~\ref{lem:ashape}, $\pol F^H$ must contains
  a majority or minority operation. We conclude that $\csp(F^H)$ is in
  $\p$.
  %
  \qed
\end{proof}


Assume  $\pol F^H$  contains no  constant operations,  no  majority or
minority, but contains a binary  idempotent operation $q$ which is not
a projection.

We distinguish four cases:
\begin{itemize}
\item[(i)] $q$ is conservative and commutative,
\item[(ii)] $q$ is conservative and non-commutative,
\item[(iii)] $q$ is non-conservative and commutative,
\item[(iv)] $q$ is non-conservative and non-commutative,
\end{itemize}

\subsection{conservative / commutative}

Case (i):  if $q$ is  conservative and commutative (called  bcc), then
$q$ is actually a 2-semilattice operation. This implies $\csp(F^H) \in
\p$ by \cite{Bul06}.

\begin{proposition}\label{prop:bcc2sl}
  Let $F$  be a set of co-Boolean  functions over a domain  $D$ and $q
  \in  \pol F^H$  such  that $q$  is a  bcc.  The operation  $q$ is  a
  2-semilattice operation.
\end{proposition}
\begin{proof}
  Remember  that a  2-semilattice  operation is  a binary  commutative
  idempotent operation $s$  on the domain $D$ such  that we have $s(a,
  s(a, b)) = s(a ,b)$ for all  $a, b \in D$.

  Let $q$ be  a bcc.  Since $q$ is  conservative, the equation $q(x,y)
  \in \{x,y\}$ holds for all $x,y \in D$. Assume we have $q(a, b) = a$
  for some $a, b \in D$. Thus, we  have $q(a, q(a, b)) = q(a, a) = a =
  q(a, b)$. Assume now that $q(a, b) = b$ holds for some $a, b \in D$.
  We have  $q(a, q(a, b))  = q(a, b)$.   Since $q$ is  commutative, we
  conclude that $q$ is a 2-semilattice operation.
  % 
  \qed
\end{proof}


\subsection{conservative / non-commutative}

Case (ii):  we will show  in the next  proposition that $q$ must  be a
projection.

\begin{lemma}\label{lem:cons_non-com}
  Let $F$  be a set of co-Boolean  functions over a domain  $D$ and $q
  \in  \pol F^H$ such  that $q$  is conservative  and non-commutative.
  Then we must have a  column $i$ in $F^H_{rhs}$, composed of elements
  $a_i$ and $b_i$, such that $q(a_i,b_i) \neq q(b_i,a_i)$ holds
\end{lemma}
\begin{proof}
  Let be such  a set $F$ and such a polymorphism  $q$. Assume that for
  every   column   $i$   in   $F^H_{rhs}$  we   have   $q(a_i,b_i)   =
  q(b_i,a_i)$. Since  $q$ is not  commutative, there must  exists $x,y
  \in D$  such that $q(x,y) \neq  q(y,x)$ holds. Take  the tuples $(x,
  \vec x)$ and  $(y, \vec y)$ in $F^H$ starting by  $x$ and $y$. Since
  we do not allow duplicated rows  in $F^H$, there exists a column $j$
  in $F^H_{rhs}$ which make the difference among $\vec x$ and $\vec y$
  at the  position $j$. Thus, we  have $x_j \neq y_j$,  that is either
  $x_j =  a_j$ and  $y_j = b_j$  or $x_j  = b_j$ and  $y_j =  a_j$. By
  assumption, we know that we have $q(a_j,b_j) = q(b_j,a_j)$. However,
  since we have $q(x,y) \neq  q(y,x)$ and $q$ conservative, $q$ cannot
  be a polymorphism of $F^H$, which is a contradiction.
  % 
  \qed
\end{proof}

\begin{proposition}\label{prop:cons_non-com}
  Let $F$  be a set of co-Boolean  functions over a domain  $D$ and $q
  \in    \pol   F^H$    such    that   $q$    is   conservative    and
  non-commutative. Then $q$ is actually a projection.
\end{proposition}
\begin{proof}
  % Since $q$ is not commutative,  there must exists a couple $(x,y) \in
  % D^2$ such that $q(x,y) \neq q(y,x)$ holds.

  Remark that if for every couple $(u,v) \in D^2$ we have $q(u,v) \neq
  q(v,u)$, then $q$ must be is  a projection. Hence, we will show that
  $q(u,v) \neq q(v,u)$ holds for every couple $(u,v) \in D^2$.

  Suppose there  exists $(x,y)  \in D^2$ such  that we have  $q(x,y) =
  q(y,x)$. We denote by $(x, \vec x)$ and $(y, \vec y)$ the two tuples
  in $F^H$  where $x$ and $y$  are in the  first column, respectively.
  Take a column $i$ in $F^H_{rhs}$ containing elements $a_i$ and $b_i$
  such that  $q(a_i,b_i) \neq q(b_i,a_i)$ holds. Indeed,  we know that
  such       a      column       must       exist      thanks       to
  Lemma~\ref{lem:cons_non-com}. Remark  that we must have  $x_i = y_i$
  (the $i$-th elements  of $\vec x$ and $\vec  y$), however $q$ cannot
  be a  polymorphism of  $F^H$ since $q$  is conservative and  we have
  $q(x,y) = q(y,x)$ and  $q(a_i,b_i) \neq q(b_i,a_i)$.  Assume we have
  $x_i = y_i = a_i$, and let $j$ be a column in $F^H_{rhs}$ containing
  elements $a_j$  and $b_j$  such that $x_j  \neq y_j$ holds.   Such a
  column  exists since $\vec  x$ and  $\vec y$  must be  different (we
  don't  allow   duplicated  rows).   If  we   have  $q(a_j,b_j)  \neq
  q(b_j,a_j)$, it rises a  contradiction with $q(x,y) = q(y,x)$.  Thus
  we  must have  $q(a_j,b_j)  = q(b_j,a_j)$.   Since  $i$ should  also
  contains the element $b_i$ somewhere, we have necessarily a row $(z,
  \vec z)$ in $F^H$ such that  $z_i = b_i$.  But remark that both $z_j
  = a_j$  and $z_j = b_j$  rise a contradiction  with $q(a_i,b_i) \neq
  q(b_i,a_i)$ and $q(a_j,b_j) = q(b_j,a_j)$.

  \begin{displaymath}
    \left(\begin{array}{c|cc}
        & i & j\\
        \hline
        x & a_i & a_j\\
        y & \textcolor{red}{a_i} & \textcolor{red}{b_j}\\
        z & \textcolor{red}{b_i} & \textcolor{red}{a_j}
      \end{array}\right)\qquad\left(\begin{array}{c|cc}
        & i & j\\
        \hline
        x & \textcolor{red}{a_i} & \textcolor{red}{a_j}\\
        y & a_i & b_j\\
        z & \textcolor{red}{b_i} & \textcolor{red}{b_j}
      \end{array}\right)
  \end{displaymath}
  % 
  \qed
\end{proof}

Since  a   polymorphism  of  $F^H$   which  is  a   binary  idempotent
conservative and non-commutative operation is a projection, $\pol F^H$
must contains  another kind of  binary idempotent operation.  In other
words, Case (ii) is impossible.

\subsection{non-conservative / commutative}

Case  (iii):  $q$  is  non-conservative  but  commutative.   The  next
proposition  proves that  $q$ is  actually a  2-semilattice operation,
implying the tractability of $\csp(F^H)$ by \cite{Bul06}.

\begin{proposition}\label{prop:non-cons_com}
  Let  $q \in  \pol F^H$  such  that $q$  is not  conservative but  is
  commutative. Then $q$ is actually a 2-semilattice.
\end{proposition}
\begin{proof}
  We already  know that  $q$ is idempotent  and commutative.  To  be a
  2-semilattice operation,  $q$ must also  satisfies $q(u, q(u,  v)) =
  q(u, v)$,  for every $u,v  \in D$. We  will show that  this equation
  holds.

  Assume there exist $x,y \in D$ such that we have $q(x, q(x, y)) \neq
  q(x, y)$.   Remark that we must have  $q(x, y) = z  \notin \{x, y\}$
  and $q(x,  z) \neq z$. Indeed, assume  we have $q(x,y =  x)$ then we
  have $q(x,  q(x,y)) = q(x,x) =  x = q(x,y)$ since  $q$ is idempotent
  and if we have $q(x,y = y)$ then $q(x, q(x, y)) = q(x,y)$.

  Let $(x,  \vec x)$,  $(y, \vec y)$  and $(z,  \vec z)$ be  the three
  tuples in  $F^H$ starting by  $x$, $y$ and $z$,  respectively. Since
  $\vec x$ and $\vec y$ must be different (duplicated rows forbidden),
  it must  exists a  column $i$ composed  of elements $a_i$  and $b_i$
  such  that  $x_i =  a_i$  and  $y_i =  b_i$.   Assume  that we  have
  $q(a_i,b_i)  =  b_i$  ($q$  must  be  conservative  on  elements  in
  $F^H_{rhs}$).  Since  $q$ is a  polymorphism of $F^H$, we  must have
  $z_i = b_i$. However, $\vec y$  and $\vec z$ are also different each
  other.  Thus,  there is a column  $j$ with elements  $a_j, b_j$ such
  that $y_j  = a_j$ and  $z_j = b_j$.   Then $x_j = b_j$  holds (since
  $x_j   =   a_j$  would   force   $z_j   =   a_j$  because   $q$   is
  idempotent). Let's  $q(x,z) = w  \neq z$ and  let $(w, \vec  w)$ the
  tuple in $F^H$ starting by $w$. Thus  we have $w_i = b_i$ and $w_j =
  b_j$ (then  observe that $w$ is  different to $x$).   Remark that we
  need a  column to make a  difference between $\vec z$  and $\vec w$.
  Let $k$ be this column upon  elements $a_k,b_k$ with $z_k = a_k$ and
  $w_k = b_k$.   Observe we need $x_k = b_k$  since $q$ is idempotent.
  However, having $y_k = a_k$ or  $y_k = b_k$ rise to a contradiction:
  If $y_k = a_k$ then $q$ is  not commutative, and if $y_k = b_k$ then
  $q$ is not idempotent.
  \begin{displaymath}
    \left(\begin{array}{c|ccc}
        & i & j & k\\
        \hline
        x & a_i & b_j & b_k\\
        y & b_i & a_j & \textcolor{red}{a_k/b_k}\\
        z & b_i & b_j & a_k
      \end{array}\right)\qquad\left(\begin{array}{c|ccc}
        & i & j & k\\
        \hline
        x & a_i & b_j & b_k\\
        z & b_i & b_j & a_k\\
        w & b_i & b_j & b_k
      \end{array}\right)
  \end{displaymath}
  % 
  \qed
\end{proof}
  
Thus,  we deduce  that  if  $\pol F^H$  contains  a binary  idempotent
non-conservative commutative operation, it  is in fact a 2-semilattice
operation and $\csp(F^H)$ is tractable by \cite{Bul06}.

\subsection{non-conservative / non-commutative}

Case (iv): $q$ is non-conservative and non-commutative.

Let say that  an ordered couple $(x,y) \in D^2$  is conservative if we
have $q(x,y)  \in \{x,y\}$,  and is commutative  if $q(x,y)  = q(y,x)$
holds.

Next proposition  shows that we  cannot have two different  couples in
$D^2$ such that  one is non-conservative commutative and  the other is
conservative non-commutative.

\begin{proposition}\label{prop:toutconsoutoutcom}
  Let  $(x,y), (u,v)$  be two  couples in  $D^2$. The  situation where
  $(x,y)$ is non-conservative  commutative and $(u,v)$ is conservative
  non-commutative is impossible.
\end{proposition}
\begin{proof}
  Assume we have  couples $(x,y), (u,v) \in D^2$  such that $(x,y)$ is
  non-conservative    commutative   and   $(u,v)$    is   conservative
  non-commutative. We will show that this fact raise a contradiction.

  Assume we have $q(x, y) = z$, with $z \notin \{x, y\}$. 

  Consider tuples  $(x, \vec x)$, $(y,  \vec y)$, $(z,  \vec z)$, $(u,
  \vec u)$  and $(v, \vec v)$ in  $F^H$.  Since $\vec x$  and $\vec y$
  must be different (no duplicated rows allowed), we have a column $i$
  composed of elements $a_i, b_i \in D$ such that $x_i = a_i$ and $y_i
  = b_i$. Since  we have $q(x, y) =  z$ and $q \in \pol  F^H$, we must
  have $q(a_i, b_i)  = b_i$. Then, to make  the difference among $\vec
  y$ and $\vec z$,  we need a column $j$ composed of  $a_j, b_j \in D$
  such that  $y_j = a_j$  and $z_j  = b_j$. We  must have $x_j  = b_j$
  since $q$ is idempotent, and $x_j = a_j$ would imply $z_j = a_j$.

  Since $(x,y)$ is commutative then  the couple $(a_i, b_i)$ must also
  be commutative.  Thus,  we cannot have for instance  $u_i = a_i$ and
  $v_i =  b_i$ since $(u,  v)$ is not  commutative.  We have  the same
  problem  with $(a_j, b_j)$.  Without loss  of generality,  assume we
  have  $u_i =  v_i  =  a_i$ and  $u_j  = v_j  =  b_j$  to avoid  this
  problem. Then, we  must have a column $k$  which make the difference
  among $\vec u$ and  $\vec v$. Assume we have $u_k =  a_k$ and $v_k =
  b_k$. Remark that the couple $(a_k, b_k)$ is not commutative.

  Hence, observe  that we have  a contradiction with tuples  $(y, \vec
  y)$ and $(u, \vec u)$ or $(v, \vec v)$. Whatever the value of $y_k$,
  we will have two  tuples with couples $(a_k, b_k)$ (non-commutative)
  and $(a_i,b_i)$ or $(a_j,b_j)$ (commutative). Another contradictions
  still  involved if  we choose  some other  values for  $u_i$, $v_i$,
  $u_j$ and $v_j$.
  % 
  \qed
\end{proof}

From  Proposition~\ref{prop:toutconsoutoutcom}  we immediately  deduce
the following corollary.

\begin{corollary}\label{cor:toutconsoutoutcom}
  All  couples $(x,y)  \in D^2$  must be  either  non-conservative, or
  non-commutative, or both.
\end{corollary}

Actually, it  is obvious to see  that all couples $(x,y)  \in D^2$ are
non-commutative  but some  of then  must be  conservative as  the next
proposition shows.

\begin{proposition}\label{prop:toutnoncom}
  All couples  $(x,y) \in  D^2$ are non-commutative  but some  of then
  must be conservative.
\end{proposition}
\begin{proof}
  The proof  is really easy.  We  just have to observe  that we cannot
  have all couples non-conservative.  Indeed, all couples which form a
  column  in  $F^H_{rhs}$ must  be  conservative  since  we work  with
  co-Boolean functions. Then by Corollary~\ref{cor:toutconsoutoutcom},
  all couples  $(x,y) \in  D^2$ are non-commutative  but some  of then
  must be conservative.
  % 
  \qed
\end{proof}

Finally, next proposition proves that if $\pol F^H$ does not contain a
majority  or a  minority then  it cannot  contain a  binary idempotent
non-conservative non-commutative  operation, so the case  where $q$ is
non-conservative non-commutative is impossible.

\begin{proposition}\label{prop:nonconsnoncom}
  Let $F^H$ be the H-normal form  of $F$ such that $\pol F^H$ does not
  contain a  majority or  a minority. So  $\pol F^H$ cannot  contain a
  binary idempotent non-conservative non-commutative operation either.
\end{proposition}
\begin{proof}
  Assume we  have $q \in \pol  F^H$ such that  $q$ is non-conservative
  and non-commutative.   Then we must  have a couple $(x,y)$  which is
  non-conservative.   Since all  couples must  be  non-commutative, we
  have $q(x,y) = z$  and $q(y,x) = t$ with $z \neq  t$ and $z,t \notin
  \{x,y\}$. We  must have a  column $i$ making the  difference between
  $\vec x$  and $\vec  y$ (for the  notation, please look  at previous
  proofs). Assume without loss of  generality that we have $x_i = a_i$
  and  $y_i  =  b_i$.   Since  $(a_i, b_i)$  is,  like  every  couple,
  non-commutative, we must have $z_i  \neq t_i$. Assume we have $z_i =
  a_i$ and $t_i = b_i$. We need a column $j$ which make the difference
  between $\vec x$ and $\vec z$. Assume we have $x_j = a_j$ and $z_j =
  b_j$. Since $q$ is idempotent, we cannot have $y_j = a_j$ (otherwise
  we  should   have  $z_j  =   a_j$).   And  since  $(a_j,   b_j)$  is
  non-commutative, we  must have  $t_j = a_j$.  Then, observe  we must
  have $b_j = q(a_j, b_j) \neq  q(b_j, a_j) = a_j$ since by assumption
  $q$ is a polymorphism of $F^H$.

  Remark that on  each column $l$ in $F^H_{rhs}$  composed of elements
  $a_l,  b_l$, $q$ must  have on  of the  following behavior:  we have
  either $q(a_l,b_l) =  a_l$ and $q(b_l,a_l) = b_l$,  that is $q$ acts
  on $(a_l,  b_l)$ like a projection  on the first  element (we denote
  this behavior by $A$), or $q(a_l,b_l) = b_l$ and $q(b_l,a_l) = a_l$,
  that is  $q$ acts on  $(a_l, b_l)$ like  a projection on  the second
  element (we denote this behavior by $B$).

  Since  $\pol  F^H$  does   not  contain  any  majority  or  minority
  operation,  by  Lemma~\ref{lem:ashape} we  must  have  a A-shape  in
  $F^H_{rhs}$.  There is 8  possible different  A-shapes, but  all are
  similar by symmetry. Let's consider the following A-shape:
  \begin{displaymath}
    \begin{array}{ccc}
      a & c & e\\
      b & d & e\\
      b & c & f
    \end{array}
  \end{displaymath}

  It is  easy to  see that,  if we have  at least  in the  A-shape one
  column under the behavior $A$ and another one under the behavior $B$
  then  $q$ cannot  be  a  polymorphism of  $F^H_{rhs}$  (and then  of
  $F^H$).

  Now, we will prove that for  previous columns $i$ and $j$, which are
  under behavior  $A$ and $B$, we  always can built a  A-shape with an
  other arbitrary column $k$.
  
  First,  remark we must  have at  least a  fifth row  $u$ to  have an
  A-shape. Indeed, it  is impossible to form a  A-shape with only rows
  $x$,  $y$,  $z$ and  $t$.   Remark that  these  four  rows are  very
  structured. Consider  a column $m$. If  $x_m = y_m$  then it implies
  $x_m = y_m = z_m = t_m$. However, having $x_m \neq y_m$ implies $z_m
  \neq t_m$. Thus we cannot have three independent kernels with column
  $i$, $j$ and $m$, so having a A-shape is not possible.

  Thus, we need one more row,  indexed by $u$.  Remark that the couple
  $(u_i,  u_j)$ is  a  couple corresponding  to  $(x_i, x_j)$,  $(y_i,
  y_j)$, $(z_i, z_j)$ or $(t_i,  t_j)$ since the couples form the four
  possible couples over values in $i$  and $j$. Thus, it must exists a
  column  $k$  to  make  the  difference  between  $\vec  u$  and  its
  corresponding couple among $(x_i,  x_j)$, $(y_i, y_j)$, $(z_i, z_j)$
  and $(t_i, t_j)$.
  % 
  \qed
\end{proof}

% \section{Other stuffs about co-Boolean $\csp$}

% Before  presenting the  next  proposition, let  us  introduce a  short
% notion about kernels of two-valued functions.

% \begin{definition}
%   Let  $f$  a two-valued  function  of $F$.  Thus,  we  must have  the
%   equation  $\ran f  = \{a,b\}$  for some  $a,b \in  D$.  Assume that,
%   following the canonical  order on $D$, we have $a <  b$. It is clear
%   that $\ker f$ contains exactly two classes of equivalence. We denote
%   by $\ker_0 f$ the subset of  $\ker f$ such that $(x,y) \in \ker_0 f$
%   if $f(x) = f(y) = a$.  Similarly, we denote by $\ker_1 f$ the subset
%   of  $\ker f$  concerning the  class of  equivalence of  $b$.  In the
%   following, we  will sometimes use  the notation $[0_f]$  and $[1_f]$
%   instead of $[a]$ and $[b]$, respectively.
% \end{definition}

% \begin{proposition}\label{prop:diffker}
%   For all fixed $i,j \in \{0,1\}$,  and for every $f,g \in F$, we have
%   either:
%   \begin{itemize}
%   \item[(i)] $\ker_i  f \nsubseteq \ker_j g$ and  $\ker_j g \nsubseteq
%     \ker_i f$,
%   \item[(ii)] $\ker_i  f \subseteq \ker_j g$ and  $\ker_j g \nsubseteq
%     \ker_i f$,
%   \item[(iii)] $\ker_i  f \subseteq \ker_j g$ and  $\ker_j f \subseteq
%     \ker_i g$.
%   \end{itemize}

%   Moreover, we have the following equivalences:
%   \begin{itemize}
%   \item  $(i)  \Leftrightarrow$ columns  represented  by  $f$ and  $g$
%     contains   the    four   possible   couples    $([i_f],   [i_g])$,
%     $([i_f],[j_g])$, $([j_f],[i_g])$ and $([j_f],[j_g])$,
%   \item   $(ii)   \Leftrightarrow   \ker_i   g  \subseteq   \ker_j   f
%     \Leftrightarrow$ columns  represented by $f$ and  $g$ contains all
%     couples except $([i_f],[i_g])$,
%   \item  $(iii)  \Leftrightarrow  \ker  f =  \ker  g  \Leftrightarrow$
%     columns   represented   by    $f$   and   $g$   contains   couples
%     $([i_f],[j_g])$ and $([j_f],[i_g])$.
%   \end{itemize}
% \end{proposition}
% \begin{proof}
%   First, we prove that we have  either $(i)$, $(ii)$ or $(iii)$. It is
%   clear that $(i)$  and $(ii)$ are exclusive mutually,  and it is also
%   the case for $(i)$ and $(iii)$. We have then to show that if $(iii)$
%   holds then we cannot have $(ii)$, and reciprocally.

%   Assume that  $(iii)$ holds,  then we know  that $\ker_j  f \subseteq
%   \ker_i g$ for $i,j$ fixed. This  means that for $x,y \in D$, $f(x) =
%   f(y) = [j_f] \Rightarrow g(x) =  g(y) = [i_g]$. Suppose that we have
%   $\ker_j g \nsubseteq  \ker_i f$ for the same  $i,j$. Then there must
%   exist $x',  y' \in D$ such that  $g(x') = g(y') =  [j_g]$ but $f(x')
%   \neq  f(y')$.  However,  since  there  exists only  two  classes  of
%   equivalence and that each element of $D$ must belong to one of these
%   class (**NEED  NEW DEFINITION OF KERNEL :  idempotent kernel**), one
%   element  between $x'$ and  $y'$ belong  to $\ker_j  f$, and  then to
%   $\ker_i g$. This is a contradiction with the fact that both $x'$ and
%   $y'$ belongs to $\ker_j g$. The proof of the reciprocal is similar.

%   Now we prove  the list of equivalences. Fact  $(i)$ means that there
%   exists two  elements in  $[i_f]$, say $x$  and $y$, such  that $g(x)
%   \neq g(y)$. In others words, $x$  must belongs to $[i_g]$ and $y$ to
%   $[j_g]$   (or  the  opposite).   Then  tuples   $([i_f],[i_g])$  and
%   $([i_f],[j_g])$ are  present. Since  we have the  same in  the other
%   direction (\textit{i.e.},  for $\ker_j  g \nsubseteq \ker_i  f$), we
%   also have  tuples $([j_f],[i_g])$ and $([j_f],[j_g])$.  Then we have
%   the four possible tuples.

%   Assume that $\ker_i f \subseteq \ker_j g$ holds. Suppose now that we
%   have $\ker_i g  \nsubseteq \ker_j f$, that is, there  is $x,y \in D$
%   such that  $g(x) = g(y)  = [i_g]$ and  $f(x) \neq f(y)$.  Using same
%   arguments than  above, we see  that we must  have either $x$  or $y$
%   belonging to $\ker_j g$, which is a contradiction.

%   Now we know that $\ker_i f \subseteq \ker_j g \Leftrightarrow \ker_i
%   g \subseteq \ker_j  f$. It is clear that  this equivalence holds for
%   $(ii)$.

%   Assume that $(ii)$ holds. Both inclusions $\ker_i f \subseteq \ker_j
%   g$ and $\ker_i g \subseteq \ker_j f$ confirm that we cannot have the
%   tuple $([i_f],[i_g])$  because having an  element in $[i_f]$  at the
%   first position force an element  in $[j_g]$ at the second one, since
%   $\ker_i f \subseteq  \ker_j g$, and having an  element in $[i_g]$ at
%   the second  position force an element  in $[j_f]$ at  the first one,
%   since $\ker_i  g \subseteq \ker_j  f$. Moreover, since we  know that
%   $\ker_j g \nsubseteq  \ker_i f$, then there exists  $x,y \in D$ such
%   that $g(x) = g(y) = [j_g]$ and $f(x) \neq f(y)$, that is to say that
%   we must  have tuples  $([j_g],[i_f])$ and $([j_g],[j_f])$.  Thus, we
%   have all tuple excepts $([i_f],[i_g])$, then we have three tuples.

%   Assume now that $(iii)$ holds. As every elements in $D$ must belongs
%   to a  class of equivalence in  $\ker f$, for  each $f \in F$,  it is
%   clear that we must have $\ker_i  g \subseteq \ker_j f$ and $\ker_j g
%   \subseteq  \ker_i f$,  then $\ker  f  = \ker  g$. Combining  results
%   above,    we   must   have    only   tuples    $([i_f],[j_g])$   and
%   $([j_f],[i_g])$. Then we have only two tuples.  
%   % 
%   \qed
% \end{proof}


\begin{thebibliography}{10}

%   \bibitem{BJK05}
%     A.~Bulatov, A.~Krokhin and P.~Jeavons
%     \newblock Classifying the Complexity of Constraints using Finite Algebras.
%     \newblock {\em SIAM Journal on Computing},
%     34(3):720--742, 2005.
    
%     \bibitem{Bro05}
%       P.~Broniek.
%       \newblock Solving equations over small unary algebras.
%       \newblock {\em DMTCS},
%       49--60, 2005.

\bibitem[Bul06]{Bul06}
  A.~Bulatov.
  \newblock Combinatorial problems raised from 2-semilattices.
  \newblock {\em Journal of Algebra},
  2006.
    
%     \bibitem{CGJ97}
%       D.~Cohen, M.~Gyssens and P.~Jeavons.
%       \newblock Closure Properties of Constraints.
%       \newblock {\em ICCP},
%       1997.

%     \bibitem{Fed01}
%       T.~Feder.
%       \newblock Classification of Homomorphisms to Oriented Cycles
%       and of $k$-partite Satisfiability.
%       \newblock {\em J. Discrete Math.},
%       2001.
    
%     \bibitem{Her07}
%       M.~Hermann.
%       \newblock On Boolean Primitive Positive Clones.
%       \newblock {\em Discrete Mathematics},
%       2005.
    
%     \bibitem{Jea98}
%       P.~Jeavons.
%       \newblock On the algebraic structure of combinatorial problems.
%       \newblock {\em Theoretical Computer Science},
%       185--205, 1998.
      
%     \bibitem{JCG97}
%         P.~Jeavons, D.~Cohen and M.~Gyssens.
%         \newblock Closure Properties of Constraints.
%         \newblock {\em JACM},
%         44(4):527--548, 1997.

\end{thebibliography}

\end{document}

